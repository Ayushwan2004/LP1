import tkinter as tk
from tkinter import messagebox


class WashingCenterApp:
    def __init__(self, master):
        self.master = master
        self.master.title("Washing Center UI")
        self.master.geometry("500x600")
        self.master.resizable(False, False)

        # Vehicle type selection
        self.vehicle_type_label = tk.Label(master, text="Select Vehicle Type:", font=("Arial", 12))
        self.vehicle_type_label.grid(row=0, column=0, padx=10, pady=10)

        self.vehicle_type_var = tk.StringVar()
        self.vehicle_type_var.set("Select")

        self.vehicle_types = ["Two Wheeler", "Three Wheeler", "Four Wheeler"]
        self.vehicle_type_menu = tk.OptionMenu(master, self.vehicle_type_var, *self.vehicle_types)
        self.vehicle_type_menu.grid(row=0, column=1, padx=10, pady=10)

        # Service type selection
        self.service_type_label = tk.Label(master, text="Select Service Type:", font=("Arial", 12))
        self.service_type_label.grid(row=1, column=0, padx=10, pady=10)

        self.service_type_var = tk.StringVar()
        self.service_type_var.set("Select")

        self.services = ["Foam Wash", "Water Wash", "Polish"]
        self.service_type_menu = tk.OptionMenu(master, self.service_type_var, *self.services)
        self.service_type_menu.grid(row=1, column=1, padx=10, pady=10)

        # Calculate button
        self.calculate_button = tk.Button(master, text="Calculate Price", font=("Arial", 12), command=self.calculate_price)
        self.calculate_button.grid(row=2, column=0, columnspan=2, pady=10)

        # Price display
        self.price_label = tk.Label(master, text="Total Price: ₹0", font=("Arial", 12, 'bold'))
        self.price_label.grid(row=3, column=0, columnspan=2, pady=10)

        # Completed button (for finalizing)
        self.completed_button = tk.Button(master, text="Completed", font=("Arial", 12), state=tk.DISABLED, command=self.generate_bill)
        self.completed_button.grid(row=4, column=0, columnspan=2, pady=10)

        # Bill display area
        self.bill_label = tk.Label(master, text="", font=("Arial", 12), justify="left")
        self.bill_label.grid(row=5, column=0, columnspan=2, pady=10)

        # Feedback section
        self.feedback_label = tk.Label(master, text="Rate your experience (1-5 stars):", font=("Arial", 12))
        self.feedback_label.grid(row=6, column=0, padx=10, pady=10)

        # Create a frame to hold the stars in a horizontal line
        self.stars_frame = tk.Frame(master)
        self.stars_frame.grid(row=6, column=1, pady=10)

        self.feedback_var = tk.IntVar()
        self.feedback_var.set(0)

        # Create 5 star buttons in the frame
        self.star_buttons = []
        for i in range(5):
            button = tk.Button(self.stars_frame, text="★", font=("Arial", 16), command=lambda i=i: self.set_feedback(i + 1))
            button.grid(row=0, column=i, padx=5)
            self.star_buttons.append(button)

        # Submit feedback button
        self.submit_feedback_button = tk.Button(master, text="Submit Feedback", font=("Arial", 12), state=tk.DISABLED, command=self.submit_feedback)
        self.submit_feedback_button.grid(row=7, column=0, columnspan=2, pady=10)

    def calculate_price(self):
        vehicle_type = self.vehicle_type_var.get()
        service_type = self.service_type_var.get()

        if vehicle_type == "Select" or service_type == "Select":
            messagebox.showerror("Input Error", "Please select both vehicle and service type.")
            return

        if vehicle_type == "Two Wheeler":
            base_price = 100
        elif vehicle_type == "Three Wheeler":
            base_price = 150
        else:  # Four Wheeler
            base_price = 200

        if service_type == "Foam Wash":
            service_price = 50
        elif service_type == "Water Wash":
            service_price = 30
        else:  # Polish
            service_price = 70

        total_price = base_price + service_price
        self.price_label.config(text=f"Total Price: ₹{total_price}")
        self.completed_button.config(state=tk.NORMAL)

        self.total_price = total_price  # Store total price for billing

    def generate_bill(self):
        bill = f"------ Bill ------\n"
        bill += f"Vehicle Type: {self.vehicle_type_var.get()}\n"
        bill += f"Service Type: {self.service_type_var.get()}\n"
        bill += f"Total Price: ₹{self.total_price}\n"
        bill += "\nThank you for using our services!\n"
        self.bill_label.config(text=bill)

        # Enable the feedback section
        self.feedback_label.config(state=tk.NORMAL)
        for button in self.star_buttons:
            button.config(state=tk.NORMAL)
        self.submit_feedback_button.config(state=tk.NORMAL)

    def set_feedback(self, rating):
        self.feedback_var.set(rating)
        # Change the stars based on rating
        for i in range(5):
            if i < rating:
                self.star_buttons[i].config(text="★", fg="gold")
            else:
                self.star_buttons[i].config(text="☆", fg="black")

    def submit_feedback(self):
        feedback = self.feedback_var.get()
        if feedback == 0:
            messagebox.showerror("Feedback Error", "Please select a rating.")
            return

        # Show the welcome message and feedback
        messagebox.showinfo("Thank You!", f"Your rating: {feedback} stars\nThank you for your feedback!\n\nPlease visit again!")


# Create the main window
root = tk.Tk()
washing_center_app = WashingCenterApp(root)
root.mainloop()
